<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if ((health_player) &lt;= 0){
    with (obj_player){
        speed = 0;
        instance_change(obj_princess_death, true);
        exit;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player health</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draws the healh for player

//Implemented from: http://gmc.yoyogames.com/index.php?showtopic=574692
/*
**  Usage:
**      draw_hearts_row(heart,bar_length,hp,max_hp,bar_x,bar_y,xoffset,yoffset)
**
**  Arguments:
**      heart       sprite to use for hearts
**      bar_length  number of hearts in each row
**      hp          variable for current hp
**      max_hp      variable for maximum hp
**      bar_x       x position
**      bar_y       y position
**      xoffset     offset of each icon based on width
**                      1 for normal width
**                      -1 to draw right to left
**      yoffset     offset of each row based on height
**                      1 for normal height
**                      -1 to draw extra rows upward
**
**  Result:
**      draws a horizontal line of hearts / icons
**      on multiple rows like Legend of Zelda
**      can also be used for ammo, mana or other resources
**
**  GMLscripts.com
**
*/

//make sure your sprite has:
//a full heart icon at index 0
//an empty heart icon at the end

heart = spr_heart;
bar_length = 5;
max_hp = 5;
bar_x = 0;
bar_y = 0;
xoffset = 1;
yoffset = 2;

parts = 2
width = sprite_get_width(heart)
height = sprite_get_height(heart)
            
index = 0
bar = 0
//draw full hearts
    repeat(floor(health_player / parts)){
        draw_sprite(heart,0-19,bar_x+width*xoffset*index,bar_y+height*yoffset*bar)
        index += 1
        if index = bar_length{
            bar +=1
            index = 0
        }
    }
//draw partial heart
    if health_player mod parts &gt;0{
        draw_sprite(spr_half_heart,0-19,bar_x+width*xoffset*index,bar_y+height*yoffset*bar)
        index += 1
        if index = bar_length{
            bar +=1
            index = 0
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
